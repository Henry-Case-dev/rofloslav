package config

import (
	"fmt"
	"log"
	"os"
	"strconv"
	"strings"
	"time"

	"github.com/joho/godotenv"
)

// Config —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
type Config struct {
	TelegramToken   string
	GeminiAPIKey    string
	GeminiModelName string
	Debug           bool

	ContextWindow                int
	ContextRelevantMessagesCount int
	MinMessages                  int
	MaxMessages                  int

	DailyTakePrompt string
	DailyTakeTime   int
	TimeZone        string

	DefaultPrompt string
	DirectPrompt  string

	SummaryPrompt string
	// –°—Ç–∞—Ä—ã–µ –ø–æ–ª—è –¥–ª—è –ª–∏–º–∏—Ç–∞ —Å–∞–º–º–∞—Ä–∏ - –£–î–ê–õ–ï–ù–´
	// RateLimitErrorMessage string
	// –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è —Å–æ—Å—Ç–∞–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
	SummaryRateLimitStaticPrefix string
	SummaryRateLimitInsultPrompt string
	SummaryRateLimitStaticSuffix string

	SummaryIntervalHours int // –ò–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–∞–º–º–∞—Ä–∏ –≤ —á–∞—Å–∞—Ö (0 - –≤—ã–∫–ª—é—á–µ–Ω–æ)

	// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ä–∞—á–µ–π
	SrachKeywords         []string `env:"SRACH_KEYWORDS" envSeparator:","`
	SRACH_WARNING_PROMPT  string   `env:"SRACH_WARNING_PROMPT"`
	SRACH_CONFIRM_PROMPT  string   `env:"SRACH_CONFIRM_PROMPT"`
	SRACH_ANALYSIS_PROMPT string   `env:"SRACH_ANALYSIS_PROMPT"`

	// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∏–º–∏—Ç–∞ –ø—Ä—è–º—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
	RateLimitDirectReplyPrompt string
	DirectReplyRateLimitCount  int
	DirectReplyRateLimitWindow time.Duration

	// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
	PromptEnterMinMessages     string `env:"PROMPT_ENTER_MIN_MESSAGES"`
	PromptEnterMaxMessages     string `env:"PROMPT_ENTER_MAX_MESSAGES"`
	PromptEnterDailyTime       string `env:"PROMPT_ENTER_DAILY_TIME"`
	PromptEnterSummaryInterval string `env:"PROMPT_ENTER_SUMMARY_INTERVAL"`

	// --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ ---
	UseS3Storage bool `env:"USE_S3_STORAGE"`
	// --- S3 –ø–æ–ª—è —É–¥–∞–ª–µ–Ω—ã ---

	// --- –ù–û–í–´–ï –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Qdrant ---
	QdrantEndpoint   string `env:"QDRANT_ENDPOINT"`
	QdrantAPIKey     string `env:"QDRANT_API_KEY"` // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
	QdrantCollection string `env:"QDRANT_COLLECTION"`
	QdrantTimeoutSec int    `env:"QDRANT_TIMEOUT_SEC" envDefault:"30"` // –¢–∞–π–º–∞—É—Ç –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π Qdrant
	// --- –ù–û–í–´–ï –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Qdrant ---
	QdrantOnDisk          bool `env:"QDRANT_ON_DISK" envDefault:"false"`          // –•—Ä–∞–Ω–∏—Ç—å –ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–µ–∫—Ç–æ—Ä—ã –Ω–∞ –¥–∏—Å–∫–µ
	QdrantQuantizationOn  bool `env:"QDRANT_QUANTIZATION_ON" envDefault:"false"`  // –í–∫–ª—é—á–∏—Ç—å –ª–∏ —Å–∫–∞–ª—è—Ä–Ω–æ–µ –∫–≤–∞–Ω—Ç–æ–≤–∞–Ω–∏–µ int8
	QdrantQuantizationRam bool `env:"QDRANT_QUANTIZATION_RAM" envDefault:"false"` // –î–µ—Ä–∂–∞—Ç—å –ª–∏ –∫–≤–∞–Ω—Ç–æ–≤–∞–Ω–Ω—ã–µ –≤–µ–∫—Ç–æ—Ä—ã –≤ RAM

	// --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–º–ø–æ—Ä—Ç–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö ---
	OldDataDir           string `env:"OLD_DATA_DIR" envDefault:"data/old"`          // –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–æ —Å—Ç–∞—Ä—ã–º–∏ JSON-–ª–æ–≥–∞–º–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
	ImportOldDataOnStart bool   `env:"IMPORT_OLD_DATA_ON_START" envDefault:"false"` // –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ª–∏ —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
	ImportChunkSize      int    `env:"IMPORT_CHUNK_SIZE" envDefault:"256"`          // –†–∞–∑–º–µ—Ä —á–∞–Ω–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ

	// --- –•—Ä–∞–Ω–∏–ª–∏—â–µ --- // NEW:
	StorageType string `env:"STORAGE_TYPE" envDefault:"qdrant"` // –¢–∏–ø —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: "qdrant" –∏–ª–∏ "local"
	// ContextWindow        int    `env:"CONTEXT_WINDOW" envDefault:"500"`       // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏ –¥–ª—è LocalStorage - –£–î–ê–õ–ï–ù–û –î–£–ë–õ–ò–†–û–í–ê–ù–ò–ï

	// –ù–û–í–û–ï –ü–û–õ–ï: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
	DataDir string `env:"DATA_DIR" envDefault:"data"`

	// --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Gemini API ---
	// GeminiAPIKey string `env:"GEMINI_API_KEY,required"` // <-- –£–î–ê–õ–Ø–ï–ú –î–£–ë–õ–ò–ö–ê–¢
}

// Load –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ .env —Ñ–∞–π–ª–∞
func Load() (*Config, error) {
	// –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π .env —Ñ–∞–π–ª
	if err := godotenv.Load(); err != nil {
		log.Println("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å .env —Ñ–∞–π–ª:", err)
	} else {
		log.Println(".env —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω.") // –î–æ–±–∞–≤–∏–º –ª–æ–≥ —É—Å–ø–µ—Ö–∞
	}

	// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π .env.secrets —Ñ–∞–π–ª (–ø–µ—Ä–µ–∑–∞–ø–∏—à–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π, –µ—Å–ª–∏ –µ—Å—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è)
	// –û—à–∏–±–∫—É –∑–¥–µ—Å—å –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º, —Ç–∞–∫ –∫–∞–∫ —Ñ–∞–π–ª –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å
	if err := godotenv.Load(".env.secrets"); err != nil {
		log.Println("–§–∞–π–ª .env.secrets –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–µ–∫—Ä–µ—Ç—ã –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–ª–∏ .env")
	} else {
		log.Println(".env.secrets —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω.")
	}

	cfg := &Config{
		// –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		GeminiModelName:              "gemini-1.5-flash-latest", // –ò—Å–ø–æ–ª—å–∑—É–µ–º Flash –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		Debug:                        false,
		ContextWindow:                1000, // –£–≤–µ–ª–∏—á–µ–Ω–æ –æ–∫–Ω–æ –¥–ª—è LocalStorage –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		ContextRelevantMessagesCount: 10,   // –ò—Å–∫–∞—Ç—å 10 —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		MinMessages:                  15,   // –ó–Ω–∞—á–µ–Ω–∏—è Min/Max –∏–∑ –≤–∞—à–µ–≥–æ .env
		MaxMessages:                  30,
		DailyTakeTime:                19,                   // 9 —É—Ç—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é // –ò–°–ü–†–ê–í–õ–ï–ù–û: 19 –∏–∑ –≤–∞—à–µ–≥–æ .env
		TimeZone:                     "Asia/Yekaterinburg", // –í–∞—à TimeZone
		SummaryIntervalHours:         0,                    // –ê–≤—Ç–æ-—Å–∞–º–º–∞—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		DefaultPrompt:                "–¢—ã –ø—Ä–æ—Å—Ç–æ–π —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –≤ —á–∞—Ç–µ.",
		DirectPrompt:                 "–¢–µ–±—è —É–ø–æ–º—è–Ω—É–ª–∏ –∏–ª–∏ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –û—Ç–≤–µ—Ç—å –∫–æ—Ä–æ—Ç–∫–æ –∏ —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω–æ.",
		DailyTakePrompt:              "–ü—Ä–∏–¥—É–º–∞–π –∫–æ—Ä–æ—Ç–∫—É—é —Ç–µ–º—É –¥–Ω—è –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –≤ —á–∞—Ç–µ.",
		SummaryPrompt:                "–°–¥–µ–ª–∞–π –∫—Ä–∞—Ç–∫–æ–µ —Å–∞–º–º–∞—Ä–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ:",
		// –°—Ç–∞—Ä—ã–µ RateLimitErrorMessage - –£–î–ê–õ–ï–ù–´
		SummaryRateLimitStaticPrefix: "–°–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—à—å —Å–∞–º–º–∞—Ä–∏.",
		SummaryRateLimitInsultPrompt: "–ü—Ä–∏–¥—É–º–∞–π –∫–æ—Ä–æ—Ç–∫–æ–µ –±–µ–∑–æ–±–∏–¥–Ω–æ–µ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –¥–ª—è –Ω–µ—Ç–µ—Ä–ø–µ–ª–∏–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
		SummaryRateLimitStaticSuffix: "–ü–æ–¥–æ–∂–¥–∏ –µ—â–µ %s.",

		// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ä–∞—á–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		SrachKeywords:         []string{"—Ç—ã –∫—Ç–æ", "–±–æ—Ç —Ç—É–ø–æ–π", "–∏–¥–∏ –Ω–∞—Ö—É–π", "–∑–∞—Ç–∫–Ω–∏—Å—å", "—Å–ª–æ–≤–æ1", "—Å–ª–æ–≤–æ2"}, // –ü—Ä–∏–º–µ—Ä –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
		SRACH_WARNING_PROMPT:  "üö® –í–Ω–∏–º–∞–Ω–∏–µ! –û–±–Ω–∞—Ä—É–∂–µ–Ω –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —Å—Ä–∞—á!",
		SRACH_CONFIRM_PROMPT:  "–û—Ç–≤–µ—Ç—å 'true' –µ—Å–ª–∏ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –Ω–∞—á–∞–ª–æ –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞/—Å—Ä–∞—á–∞, –∏–Ω–∞—á–µ –æ—Ç–≤–µ—Ç—å 'false'. –°–æ–æ–±—â–µ–Ω–∏–µ:",
		SRACH_ANALYSIS_PROMPT: "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–π –¥–∏–∞–ª–æ–≥ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞. –ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏ —Å—É—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞, –æ—Å–Ω–æ–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã. –î–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–µ—ç—Å–∫–∞–ª–∞—Ü–∏–∏.",

		// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∏–º–∏—Ç–∞ –ø—Ä—è–º—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		RateLimitDirectReplyPrompt: "–•–≤–∞—Ç–∏—Ç –º–Ω–µ –ø–∏—Å–∞—Ç—å —Ç–∞–∫ —á–∞—Å—Ç–æ. –û—Ç–¥–æ—Ö–Ω–∏.",
		DirectReplyRateLimitCount:  3,
		DirectReplyRateLimitWindow: 10 * time.Minute,

		// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
		PromptEnterMinMessages:     "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–≤–µ—Ç–∞ (—á–∏—Å–ª–æ > 0):",
		PromptEnterMaxMessages:     "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–≤–µ—Ç–∞ (—á–∏—Å–ª–æ >= –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ):",
		PromptEnterDailyTime:       "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —á–∞—Å –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ —Ç–µ–π–∫–∞ (0-23) –ø–æ –≤—Ä–µ–º–µ–Ω–∏ %s:",
		PromptEnterSummaryInterval: "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –∞–≤—Ç–æ-—Å–∞–º–º–∞—Ä–∏ –≤ —á–∞—Å–∞—Ö (0 - –≤—ã–∫–ª—é—á–∏—Ç—å):",

		// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		UseS3Storage: false, // S3 –≤—ã–∫–ª—é—á–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		// --- S3 –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —É–¥–∞–ª–µ–Ω—ã ---

		// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Qdrant –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		QdrantEndpoint:   "http://localhost:6333", // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç Qdrant
		QdrantAPIKey:     "",                      // API –∫–ª—é—á –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		QdrantCollection: "chat_history",          // –ò–º—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		QdrantTimeoutSec: 15,                      // –¢–∞–π–º–∞—É—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		// --- –ù–û–í–´–ï –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Qdrant –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ---
		QdrantOnDisk:          false, // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–µ–∫—Ç–æ—Ä—ã –≤ RAM
		QdrantQuantizationOn:  false, // –ö–≤–∞–Ω—Ç–æ–≤–∞–Ω–∏–µ –≤—ã–∫–ª—é—á–µ–Ω–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		QdrantQuantizationRam: true,  // –ï—Å–ª–∏ –∫–≤–∞–Ω—Ç–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ, –¥–µ—Ä–∂–∞—Ç—å –≤ RAM

		// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–º–ø–æ—Ä—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		ImportOldDataOnStart: false,       // –ò–º–ø–æ—Ä—Ç –≤—ã–∫–ª—é—á–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		OldDataDir:           "/data/old", // –ü–∞–ø–∫–∞ –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		ImportChunkSize:      256,         // –†–∞–∑–º–µ—Ä —á–∞–Ω–∫–∞ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞

		// --- –•—Ä–∞–Ω–∏–ª–∏—â–µ --- // NEW:
		StorageType: "qdrant", // –¢–∏–ø —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: "qdrant" –∏–ª–∏ "local"
		// ContextWindow: 500,      // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏ –¥–ª—è LocalStorage - –£–î–ê–õ–ï–ù–û –î–£–ë–õ–ò–†–û–í–ê–ù–ò–ï

		// –ù–û–í–û–ï –ü–û–õ–ï: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
		DataDir: "data",

		// --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Gemini API ---
		// GeminiAPIKey: "", // <-- –£–î–ê–õ–Ø–ï–ú –î–£–ë–õ–ò–ö–ê–¢
	}

	// –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
	cfg.TelegramToken = os.Getenv("TELEGRAM_TOKEN")
	cfg.GeminiAPIKey = os.Getenv("GEMINI_API_KEY")
	if geminiModel := os.Getenv("GEMINI_MODEL_NAME"); geminiModel != "" {
		cfg.GeminiModelName = geminiModel
	}
	if defaultPrompt := os.Getenv("DEFAULT_PROMPT"); defaultPrompt != "" {
		cfg.DefaultPrompt = defaultPrompt
	}
	if directPrompt := os.Getenv("DIRECT_PROMPT"); directPrompt != "" {
		cfg.DirectPrompt = directPrompt
	}
	if dailyTakePrompt := os.Getenv("DAILY_TAKE_PROMPT"); dailyTakePrompt != "" {
		cfg.DailyTakePrompt = dailyTakePrompt
	}
	if tz := os.Getenv("TIME_ZONE"); tz != "" {
		cfg.TimeZone = tz
	}
	if summaryPrompt := os.Getenv("SUMMARY_PROMPT"); summaryPrompt != "" {
		cfg.SummaryPrompt = summaryPrompt
	}
	// --- –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π –¥–ª—è RateLimitErrorMessage ---
	if prefix := os.Getenv("SUMMARY_RATE_LIMIT_STATIC_PREFIX"); prefix != "" {
		cfg.SummaryRateLimitStaticPrefix = prefix
	}
	if insult := os.Getenv("SUMMARY_RATE_LIMIT_INSULT_PROMPT"); insult != "" {
		cfg.SummaryRateLimitInsultPrompt = insult
	}
	if suffix := os.Getenv("SUMMARY_RATE_LIMIT_STATIC_SUFFIX"); suffix != "" {
		cfg.SummaryRateLimitStaticSuffix = suffix
	}
	// --- –ö–æ–Ω–µ—Ü –∑–∞–≥—Ä—É–∑–∫–∏ ---
	if srachWarn := os.Getenv("SRACH_WARNING_PROMPT"); srachWarn != "" {
		cfg.SRACH_WARNING_PROMPT = srachWarn
	}
	if srachConfirm := os.Getenv("SRACH_CONFIRM_PROMPT"); srachConfirm != "" {
		cfg.SRACH_CONFIRM_PROMPT = srachConfirm
	}
	if srachAnalysis := os.Getenv("SRACH_ANALYSIS_PROMPT"); srachAnalysis != "" {
		cfg.SRACH_ANALYSIS_PROMPT = srachAnalysis
	}
	if keywords := os.Getenv("SRACH_KEYWORDS"); keywords != "" {
		cfg.SrachKeywords = strings.Split(keywords, ",")
		// –û—á–∏—â–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –ø–æ –∫—Ä–∞—è–º —É –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞
		for i, w := range cfg.SrachKeywords {
			cfg.SrachKeywords[i] = strings.TrimSpace(w)
		}
	}
	if rateLimitPrompt := os.Getenv("RATE_LIMIT_DIRECT_REPLY_PROMPT"); rateLimitPrompt != "" {
		cfg.RateLimitDirectReplyPrompt = rateLimitPrompt
	}
	// --- –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ ---
	if prompt := os.Getenv("PROMPT_ENTER_MIN_MESSAGES"); prompt != "" {
		cfg.PromptEnterMinMessages = prompt
	}
	if prompt := os.Getenv("PROMPT_ENTER_MAX_MESSAGES"); prompt != "" {
		cfg.PromptEnterMaxMessages = prompt
	}
	if prompt := os.Getenv("PROMPT_ENTER_DAILY_TIME"); prompt != "" {
		cfg.PromptEnterDailyTime = prompt
	}
	if prompt := os.Getenv("PROMPT_ENTER_SUMMARY_INTERVAL"); prompt != "" {
		cfg.PromptEnterSummaryInterval = prompt
	}
	// --- –ö–æ–Ω–µ—Ü –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–º–ø—Ç–æ–≤ ---
	// --- –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ ---
	if useS3Str := os.Getenv("USE_S3_STORAGE"); useS3Str != "" {
		cfg.UseS3Storage, _ = strconv.ParseBool(useS3Str) // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –æ—Å—Ç–∞–Ω–µ—Ç—Å—è false
	}
	// --- –ó–∞–≥—Ä—É–∑–∫–∞ S3 –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–¥–∞–ª–µ–Ω–∞ ---

	// --- –ó–∞–≥—Ä—É–∑–∫–∞ –ù–û–í–´–• –Ω–∞—Å—Ç—Ä–æ–µ–∫ Qdrant ---
	if qdrantEndpoint := os.Getenv("QDRANT_ENDPOINT"); qdrantEndpoint != "" {
		cfg.QdrantEndpoint = qdrantEndpoint
	}
	cfg.QdrantAPIKey = os.Getenv("QDRANT_API_KEY") // –ú–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º
	if qdrantCollection := os.Getenv("QDRANT_COLLECTION"); qdrantCollection != "" {
		cfg.QdrantCollection = qdrantCollection
	}
	// --- –ö–æ–Ω–µ—Ü –∑–∞–≥—Ä—É–∑–∫–∏ ---

	// --- –ù–û–í–´–ï --- –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–º–ø–æ—Ä—Ç–∞
	if oldDataDir := os.Getenv("OLD_DATA_DIR"); oldDataDir != "" {
		cfg.OldDataDir = oldDataDir
	}
	// --- –ö–æ–Ω–µ—Ü –∑–∞–≥—Ä—É–∑–∫–∏ ---

	// –ó–∞–≥—Ä—É–∑–∫–∞ —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
	if contextWindowStr := os.Getenv("CONTEXT_WINDOW"); contextWindowStr != "" {
		if val, err := strconv.Atoi(contextWindowStr); err == nil && val > 0 {
			cfg.ContextWindow = val
		}
	}
	if relevantCountStr := os.Getenv("CONTEXT_RELEVANT_MESSAGES_COUNT"); relevantCountStr != "" {
		if val, err := strconv.Atoi(relevantCountStr); err == nil && val > 0 {
			cfg.ContextRelevantMessagesCount = val
		}
	}
	if minMsgStr := os.Getenv("MIN_MESSAGES"); minMsgStr != "" {
		if val, err := strconv.Atoi(minMsgStr); err == nil && val > 0 {
			cfg.MinMessages = val
		}
	}
	if maxMsgStr := os.Getenv("MAX_MESSAGES"); maxMsgStr != "" {
		if val, err := strconv.Atoi(maxMsgStr); err == nil && val >= cfg.MinMessages {
			cfg.MaxMessages = val
		}
	}
	if dailyTimeStr := os.Getenv("DAILY_TAKE_TIME"); dailyTimeStr != "" {
		if val, err := strconv.Atoi(dailyTimeStr); err == nil && val >= 0 && val <= 23 {
			cfg.DailyTakeTime = val
		}
	}
	if debugStr := os.Getenv("DEBUG"); debugStr != "" {
		cfg.Debug, _ = strconv.ParseBool(debugStr) // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –æ—Å—Ç–∞–Ω–µ—Ç—Å—è false
	}
	if summaryIntervalStr := os.Getenv("SUMMARY_INTERVAL_HOURS"); summaryIntervalStr != "" {
		if val, err := strconv.Atoi(summaryIntervalStr); err == nil && val >= 0 {
			cfg.SummaryIntervalHours = val
		}
	}
	if rateLimitCountStr := os.Getenv("DIRECT_REPLY_RATE_LIMIT_COUNT"); rateLimitCountStr != "" {
		if val, err := strconv.Atoi(rateLimitCountStr); err == nil && val >= 0 {
			cfg.DirectReplyRateLimitCount = val
		}
	}
	if rateLimitWindowStr := os.Getenv("DIRECT_REPLY_RATE_LIMIT_WINDOW"); rateLimitWindowStr != "" {
		if duration, err := time.ParseDuration(rateLimitWindowStr); err == nil {
			cfg.DirectReplyRateLimitWindow = duration
		} else {
			log.Printf("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç DIRECT_REPLY_RATE_LIMIT_WINDOW: %v. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.", err)
		}
	}
	if qdrantTimeoutStr := os.Getenv("QDRANT_TIMEOUT_SEC"); qdrantTimeoutStr != "" {
		if val, err := strconv.Atoi(qdrantTimeoutStr); err == nil && val > 0 {
			cfg.QdrantTimeoutSec = val
		}
	}
	// --- –ù–û–í–´–ï --- –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–ª–∞–≥–æ–≤ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Qdrant
	if onDiskStr := os.Getenv("QDRANT_ON_DISK"); onDiskStr != "" {
		cfg.QdrantOnDisk, _ = strconv.ParseBool(onDiskStr)
	}
	if quantOnStr := os.Getenv("QDRANT_QUANTIZATION_ON"); quantOnStr != "" {
		cfg.QdrantQuantizationOn, _ = strconv.ParseBool(quantOnStr)
	}
	if quantRamStr := os.Getenv("QDRANT_QUANTIZATION_RAM"); quantRamStr != "" {
		cfg.QdrantQuantizationRam, _ = strconv.ParseBool(quantRamStr)
	}

	// --- –ù–û–í–´–ï --- –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–ª–∞–≥–∞ –∏–º–ø–æ—Ä—Ç–∞ –∏ —Ä–∞–∑–º–µ—Ä–∞ —á–∞–Ω–∫–∞
	if importOldStr := os.Getenv("IMPORT_OLD_DATA_ON_START"); importOldStr != "" {
		cfg.ImportOldDataOnStart, _ = strconv.ParseBool(importOldStr)
	}
	if importChunkSizeStr := os.Getenv("IMPORT_CHUNK_SIZE"); importChunkSizeStr != "" {
		if val, err := strconv.Atoi(importChunkSizeStr); err == nil && val > 0 {
			cfg.ImportChunkSize = val
		}
	}

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
	if cfg.TelegramToken == "" {
		return nil, fmt.Errorf("–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
	}
	if cfg.GeminiAPIKey == "" {
		return nil, fmt.Errorf("–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è GEMINI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
	}

	return cfg, nil
}
