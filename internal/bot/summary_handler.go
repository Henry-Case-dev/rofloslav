package bot

import (
	"fmt"
	"log"
	"strings"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// generateSummary —Å–æ–∑–¥–∞–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–∞–º–º–∞—Ä–∏ –¥–∏–∞–ª–æ–≥–∞
func (b *Bot) generateSummary(chatID int64) {
	// –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
	messages := b.storage.GetMessagesSince(chatID, time.Now().Add(-24*time.Hour))
	if len(messages) == 0 {
		b.sendReply(chatID, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∞–º–º–∞—Ä–∏.")
		return
	}

	if b.config.Debug {
		log.Printf("[DEBUG] –°–æ–∑–¥–∞—é —Å–∞–º–º–∞—Ä–∏ –¥–ª—è —á–∞—Ç–∞ %d. –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: %d", chatID, len(messages))
	}

	// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–æ–º–ø—Ç –¥–ª—è —Å–∞–º–º–∞—Ä–∏ –±–µ–∑ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
	summaryPrompt := b.config.SummaryPrompt

	const maxAttempts = 3 // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
	const minWords = 10   // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ —Å–∞–º–º–∞—Ä–∏

	var finalSummary string
	var lastErr error // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –æ—à–∏–±–∫—É API
	var attempt int

	for attempt = 1; attempt <= maxAttempts; attempt++ {
		if b.config.Debug {
			log.Printf("[DEBUG] –ß–∞—Ç %d: –ü–æ–ø—ã—Ç–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–∞–º–º–∞—Ä–∏ ‚Ññ%d", chatID, attempt)
		}

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Gemini —Å –ø—Ä–æ–º–ø—Ç–æ–º –¥–ª—è —Å–∞–º–º–∞—Ä–∏
		summary, err := b.llm.GenerateResponse(summaryPrompt, messages)
		if err != nil {
			lastErr = err // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –æ—à–∏–±–∫—É
			if b.config.Debug {
				log.Printf("[DEBUG] –ß–∞—Ç %d: –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–∞–º–º–∞—Ä–∏ (–ø–æ–ø—ã—Ç–∫–∞ %d): %v", chatID, attempt, err)
			}
			// –ü—Ä–∏ –æ—à–∏–±–∫–µ API –Ω–µ—Ç —Å–º—ã—Å–ª–∞ –ø–æ–≤—Ç–æ—Ä—è—Ç—å —Å—Ä–∞–∑—É –±–µ–∑ –ø–∞—É–∑—ã
			if attempt < maxAttempts {
				time.Sleep(1 * time.Second)
			}
			continue // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–µ
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤
		wordCount := len(strings.Fields(summary))
		if b.config.Debug {
			log.Printf("[DEBUG] –ß–∞—Ç %d: –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å–∞–º–º–∞—Ä–∏ (–ø–æ–ø—ã—Ç–∫–∞ %d), —Å–ª–æ–≤: %d. –¢–µ–∫—Å—Ç: %s...", chatID, attempt, wordCount, summary)
		}

		if wordCount >= minWords {
			finalSummary = summary
			lastErr = nil // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
			break         // –£—Å–ø–µ—à–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
		}

		// –ï—Å–ª–∏ —Å–ª–æ–≤ –º–∞–ª–æ, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
		if attempt < maxAttempts {
			time.Sleep(1 * time.Second)
		}
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫
	if finalSummary == "" {
		if b.config.Debug {
			log.Printf("[DEBUG] –ß–∞—Ç %d: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª–∏–Ω–Ω–æ–µ —Å–∞–º–º–∞—Ä–∏ –ø–æ—Å–ª–µ %d –ø–æ–ø—ã—Ç–æ–∫.", chatID, maxAttempts)
		}
		errMsg := "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–∞–º–º–∞—Ä–∏ –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫."
		if lastErr != nil { // –ï—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –æ—à–∏–±–∫–æ–π API –∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –±—ã–ª–∏ –Ω–µ—É–¥–∞—á–Ω—ã–º–∏
			errMsg += fmt.Sprintf(" –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: %v", lastErr)
		}
		b.sendReply(chatID, errMsg)
		return
	}

	if b.config.Debug {
		log.Printf("[DEBUG] –°–∞–º–º–∞—Ä–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ –¥–ª—è —á–∞—Ç–∞ %d –ø–æ—Å–ª–µ %d –ø–æ–ø—ã—Ç–æ–∫", chatID, attempt)
	}

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–∞–º–º–∞—Ä–∏
	finalMessageText := fmt.Sprintf("üìã *–°–∞–º–º–∞—Ä–∏ –¥–∏–∞–ª–æ–≥–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞:*\n\n%s", finalSummary)
	msg := tgbotapi.NewMessage(chatID, finalMessageText)
	msg.ParseMode = "Markdown"
	_, sendErr := b.api.Send(msg)
	if sendErr != nil {
		log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–∞–º–º–∞—Ä–∏ –≤ —á–∞—Ç %d: %v", chatID, sendErr)
	}
}
