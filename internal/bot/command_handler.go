package bot

import (
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/Henry-Case-dev/rofloslav/internal/config"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

const summaryRequestInterval = 10 * time.Minute // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –≤—ã–∑–æ–≤ /summary

// handleCommand –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã
func (b *Bot) handleCommand(message *tgbotapi.Message) {
	command := message.Command()
	chatID := message.Chat.ID
	userID := message.From.ID
	username := message.From.UserName

	// Get current settings for the chat
	b.settingsMutex.RLock()
	settings, exists := b.chatSettings[chatID]
	if !exists {
		// If settings don't exist, they should be created in handleUpdate before this
		log.Printf("[ERROR][CmdHandler] Chat %d: Settings not found for command /%s", chatID, command)
		b.settingsMutex.RUnlock()
		return
	}
	lastMenuMsgID := settings.LastMenuMessageID
	lastSettingsMsgID := settings.LastSettingsMessageID
	lastInfoMsgID := settings.LastInfoMessageID
	b.settingsMutex.RUnlock()

	// Delete the command message itself to keep the chat clean
	b.deleteMessage(chatID, message.MessageID)

	// Check if the user is an admin for admin-only commands
	isUserAdmin := b.isAdmin(message.From)

	switch command {
	case "start":
		// Usually handled by ensureChatInitializedAndWelcome
		// Send main menu anyway
		b.sendMainMenu(chatID, lastMenuMsgID)
	case "menu":
		b.sendMainMenu(chatID, lastMenuMsgID)
	case "settings":
		b.sendSettingsKeyboard(chatID, lastSettingsMsgID)
	case "summary":
		// Check rate limit
		now := time.Now()
		b.summaryMutex.Lock() // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º—å—é—Ç–µ–∫—Å –¥–ª—è lastSummaryRequest
		lastReq, ok := b.lastSummaryRequest[chatID]
		durationSinceLast := now.Sub(lastReq)
		if ok && durationSinceLast < summaryRequestInterval {
			remainingTime := summaryRequestInterval - durationSinceLast
			log.Printf("[DEBUG] –ß–∞—Ç %d: /summary –æ—Ç–∫–ª–æ–Ω–µ–Ω –∏–∑-–∑–∞ rate limit. –ü—Ä–æ—à–ª–æ: %v < %v. –û—Å—Ç–∞–ª–æ—Å—å: %v", chatID, durationSinceLast, summaryRequestInterval, remainingTime)
			b.summaryMutex.Unlock()

			// --- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π —á–∞—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è ---
			dynamicPart := ""
			if b.config.RateLimitPrompt != "" {
				generatedText, err := b.llm.GenerateArbitraryResponse(b.config.RateLimitPrompt, "") // –ö–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ –Ω—É–∂–µ–Ω
				if err != nil {
					log.Printf("[ERROR] –ß–∞—Ç %d: –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π —á–∞—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ª–∏–º–∏—Ç–µ: %v", chatID, err)
					// –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –∏–ª–∏ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
				} else {
					dynamicPart = strings.TrimSpace(generatedText)
				}
			}

			// --- –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è ---
			fullMessage := fmt.Sprintf("%s %s\n–ü–æ–¥–æ–∂–¥–∏ –µ—â–µ: %s",
				b.config.RateLimitStaticText,
				dynamicPart,
				formatRemainingTime(remainingTime),
			)

			if lastInfoMsgID != 0 {
				b.deleteMessage(chatID, lastInfoMsgID)
			}
			msg := tgbotapi.NewMessage(chatID, fullMessage)
			sentMsg, err := b.api.Send(msg)
			if err == nil {
				b.settingsMutex.Lock()
				if set, ok := b.chatSettings[chatID]; ok {
					set.LastInfoMessageID = sentMsg.MessageID
				}
				b.settingsMutex.Unlock()
			}
			return
		}
		// Update last request time
		b.lastSummaryRequest[chatID] = now
		b.summaryMutex.Unlock()

		log.Printf("[DEBUG] –ß–∞—Ç %d: /summary –≤—ã–∑–≤–∞–Ω. –ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–ø—Ä–æ—Å –±—ã–ª: %v (ok=%t). –ü—Ä–æ—à–ª–æ: %v. –õ–∏–º–∏—Ç: %v.",
			chatID, lastReq, ok, durationSinceLast, summaryRequestInterval)

		// --- –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∏–Ω—Ñ–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ ---
		if lastInfoMsgID != 0 {
			b.deleteMessage(chatID, lastInfoMsgID)
		}
		// --- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ ID ---
		msg := tgbotapi.NewMessage(chatID, "–ì–µ–Ω–µ—Ä–∏—Ä—É—é —Å–∞–º–º–∞—Ä–∏, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
		sentMsg, err := b.api.Send(msg)
		if err == nil {
			b.settingsMutex.Lock()
			// settings.LastInfoMessageID = sentMsg.MessageID // –û–±–Ω–æ–≤–ª—è–µ–º settings —á–µ—Ä–µ–∑ RLock/Lock
			if set, ok := b.chatSettings[chatID]; ok {
				set.LastInfoMessageID = sentMsg.MessageID
			}
			b.settingsMutex.Unlock()
		} else {
			log.Printf("[ERROR] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è '–ì–µ–Ω–µ—Ä–∏—Ä—É—é —Å–∞–º–º–∞—Ä–∏...' –≤ —á–∞—Ç %d: %v", chatID, err)
		}

		// –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤ –≥–æ—Ä—É—Ç–∏–Ω–µ
		go b.createAndSendSummary(chatID)

	// --- Admin Command: /profile_set ---
	case "profile_set":
		if !isUserAdmin {
			b.sendReply(chatID, "üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
			return
		}

		// –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç—É –≤–≤–æ–¥–∞
		instructionText := "üìù –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\\n`@–Ω–∏–∫–Ω–µ–π–º - –ü—Ä–æ–∑–≤–∏—â–µ - –ü–æ–ª (male/female/other) - –ù–∞—Å—Ç–æ—è—â–µ–µ –∏–º—è (–µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω–æ) - –ë–∏–æ`\\n\\n_–ü–æ–ª, –ù–∞—Å—Ç\\.–∏–º—è –∏ –ë–∏–æ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å\\. –ü–æ–ª –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∫–∞–∫ m/f\\._\\n\\n_–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥\\._"
		instructionMsg := tgbotapi.NewMessage(chatID, instructionText)
		instructionMsg.ParseMode = tgbotapi.ModeMarkdown // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π Markdown

		sentInstruction, err := b.api.Send(instructionMsg)
		if err != nil {
			log.Printf("[ERROR][CmdHandler /profile_set] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ —á–∞—Ç %d: %v", chatID, err)
			return
		}

		// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –ø—Ä–æ—Ñ–∏–ª—è
		b.settingsMutex.Lock()
		if settings, exists := b.chatSettings[chatID]; exists {
			settings.PendingSetting = "profile_data"               // –ò—Å–ø–æ–ª—å–∑—É–µ–º —ç—Ç–æ –ø–æ–ª–µ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è
			settings.LastInfoMessageID = sentInstruction.MessageID // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
		}
		b.settingsMutex.Unlock()

		// –ó–∞–ø—É—Å–∫–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
		go func() {
			time.Sleep(15 * time.Second)
			b.deleteMessage(chatID, sentInstruction.MessageID)
			// –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —Å–±—Ä–æ—Å–∏—Ç—å PendingSetting, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª –∑–∞ 15 —Å–µ–∫?
			// –ü–æ–∫–∞ –Ω–µ –±—É–¥–µ–º, –¥–∞–¥–∏–º –≤—Ä–µ–º—è –≤–≤–µ—Å—Ç–∏.
		}()

		log.Printf("[ADMIN CMD] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s (%d) –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /profile_set –≤ —á–∞—Ç–µ %d. –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö.", username, userID, chatID)
		// –í—ã—Ö–æ–¥–∏–º, –æ—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –±—É–¥–µ—Ç –≤ handleMessage –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è

	// --- Admin Command: /backfill_embeddings ---
	case "backfill_embeddings":
		if !isUserAdmin {
			b.sendReply(chatID, "üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
			return
		}
		if b.config.StorageType != config.StorageTypeMongo {
			b.sendReply(chatID, "üö´ –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ MongoDB.")
			return
		}
		if !b.config.LongTermMemoryEnabled {
			b.sendReply(chatID, "üö´ –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è –ø–∞–º—è—Ç—å (–≤–µ–∫—Ç–æ—Ä–Ω—ã–π –ø–æ–∏—Å–∫) –≤—ã–∫–ª—é—á–µ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.")
			return
		}

		log.Printf("[ADMIN CMD] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s (%d) –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /backfill_embeddings –≤ —á–∞—Ç–µ %d.", username, userID, chatID)
		// –ó–∞–ø—É—Å–∫–∞–µ–º –±—ç–∫—Ñ–∏–ª–ª –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –≥–æ—Ä—É—Ç–∏–Ω–µ, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞
		go b.runBackfillEmbeddings(chatID)
		// –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
		go b.sendAndDeleteAfter(chatID, "‚è≥ –ó–∞–ø—É—Å–∫–∞—é –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤–µ–∫—Ç–æ—Ä–Ω—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —ç—Ç–æ–º —á–∞—Ç–µ. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏...", 15*time.Second)

	// --- Admin Command: /reset_autobio ---
	case "reset_autobio":
		if !isUserAdmin {
			b.sendReply(chatID, "üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
			return
		}
		if !b.config.AutoBioEnabled {
			b.sendReply(chatID, "üö´ –§—É–Ω–∫—Ü–∏—è AutoBio –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.")
			return
		}
		log.Printf("[ADMIN CMD] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s (%d) –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /reset_autobio –≤ —á–∞—Ç–µ %d.", username, userID, chatID)
		err := b.storage.ResetAutoBioTimestamps(chatID)
		if err != nil {
			log.Printf("[ERROR][CmdHandler /reset_autobio] –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –≤—Ä–µ–º–µ–Ω–∏ AutoBio –¥–ª—è —á–∞—Ç–∞ %d: %v", chatID, err)
			b.sendReply(chatID, fmt.Sprintf("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –≤—Ä–µ–º–µ–Ω–∏ AutoBio: %v", err)) // –û—à–∏–±–∫—É –æ—Å—Ç–∞–≤–ª—è–µ–º
		} else {
			// –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ —É–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
			go b.sendAndDeleteAfter(chatID, "‚úÖ –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ AutoBio —Å–±—Ä–æ—à–µ–Ω–æ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —ç—Ç–æ–≥–æ —á–∞—Ç–∞. –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—É—Å–∫–µ.", 15*time.Second)
		}

	// --- Admin Command: /trigger_autobio ---
	case "trigger_autobio":
		if !isUserAdmin {
			b.sendReply(chatID, "üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
			return
		}
		if !b.config.AutoBioEnabled {
			b.sendReply(chatID, "üö´ –§—É–Ω–∫—Ü–∏—è AutoBio –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.")
			return
		}
		log.Printf("[ADMIN CMD] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s (%d) –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /trigger_autobio –≤ —á–∞—Ç–µ %d.", username, userID, chatID)
		// –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –≥–æ—Ä—É—Ç–∏–Ω–µ
		go b.runAutoBioAnalysisForChat(chatID)
		// –°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ —É–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
		go b.sendAndDeleteAfter(chatID, "‚è≥ –ó–∞–ø—É—Å–∫–∞—é –∞–Ω–∞–ª–∏–∑ AutoBio –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —ç—Ç–æ–≥–æ —á–∞—Ç–∞. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...", 15*time.Second)

	default:
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∞–¥–º–∏–Ω—Å–∫–∞—è –ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞, —á—Ç–æ–±—ã –Ω–µ –ø–∏—Å–∞—Ç—å "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞" –∞–¥–º–∏–Ω–∞–º
		if !isUserAdmin {
			log.Printf("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: %s –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %s (%d) –≤ —á–∞—Ç–µ %d", command, username, userID, chatID)
			// –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏–ª–∏ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å
			// b.sendReply(chatID, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")
		} else {
			log.Printf("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ (–æ—Ç –∞–¥–º–∏–Ω–∞ %s): %s", username, command)
			b.sendReply(chatID, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")
		}
	}
}
