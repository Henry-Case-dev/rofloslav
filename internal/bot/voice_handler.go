package bot

import (
	"fmt"
	"io"
	"log"
	"net/http"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// handleVoiceMessage –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–µ–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: —Å–∫–∞—á–∏–≤–∞–µ—Ç, —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä—É–µ—Ç,
// —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç, –û–¢–ü–†–ê–í–õ–Ø–ï–¢ –í –ß–ê–¢ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—É—é –≤–µ—Ä—Å–∏—é. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫—É.
func (b *Bot) handleVoiceMessage(message *tgbotapi.Message) error {
	chatID := message.Chat.ID
	messageID := message.MessageID
	userID := message.From.ID

	log.Printf("[INFO][VoiceHandler] Chat %d: Handling voice message ID %d from user %d", chatID, messageID, userID)

	// 0. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞
	settings, err := b.storage.GetChatSettings(chatID)
	if err != nil {
		log.Printf("[ERROR][VoiceHandler] Chat %d: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–∞—Ç–∞: %v", chatID, err)
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–∞—Ç–∞: %w", err)
	}
	voiceEnabled := b.config.VoiceTranscriptionEnabledDefault
	if settings.VoiceTranscriptionEnabled != nil {
		voiceEnabled = *settings.VoiceTranscriptionEnabled
	}
	if !voiceEnabled {
		log.Printf("Chat %d: –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –≥–æ–ª–æ—Å–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.", chatID)
		return nil
	}

	// --- –ö–æ–Ω–µ—Ü –ø—Ä–æ–≤–µ—Ä–∫–∏ ---
	// –£–¥–∞–ª–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è startDownloadTime
	// 1. –ü–æ–ª—É—á–∞–µ–º FileID –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
	fileID := message.Voice.FileID
	log.Printf("Chat %d: –ü–æ–ª—É—á–µ–Ω–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å FileID: %s", chatID, fileID)

	// 2. –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
	fileConfig := tgbotapi.FileConfig{FileID: fileID}
	fileInfo, err := b.api.GetFile(fileConfig)
	if err != nil {
		log.Printf("Chat %d: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ %s: %v", chatID, fileID, err)
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ: %w", err)
	}
	log.Printf("Chat %d: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ –ø–æ–ª—É—á–µ–Ω–∞: Path=%s, Size=%d", chatID, fileInfo.FilePath, fileInfo.FileSize)

	// 3. –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
	fileURL := fileInfo.Link(b.api.Token)
	log.Printf("Chat %d: URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞: %s", chatID, fileURL)

	// 4. –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
	resp, err := http.Get(fileURL)
	if err != nil {
		log.Printf("Chat %d: –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ %s: %v", chatID, fileID, err)
		return fmt.Errorf("–æ—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞: %w", err)
	}
	defer resp.Body.Close()

	if resp.StatusCode != http.StatusOK {
		bodyBytes, _ := io.ReadAll(resp.Body) // –ß–∏—Ç–∞–µ–º —Ç–µ–ª–æ –¥–ª—è –ª–æ–≥–∞
		log.Printf("Chat %d: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª %s, —Å—Ç–∞—Ç—É—Å: %d, —Ç–µ–ª–æ: %s", chatID, fileID, resp.StatusCode, string(bodyBytes))
		return fmt.Errorf("–Ω–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª, —Å—Ç–∞—Ç—É—Å: %d", resp.StatusCode)
	}

	// 5. –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
	voiceData, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Printf("Chat %d: –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è —Ñ–∞–π–ª–∞ %s: %v", chatID, fileID, err)
		return fmt.Errorf("–æ—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞: %w", err)
	}
	log.Printf("Chat %d: –§–∞–π–ª %s —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω (%d –±–∞–π—Ç).", chatID, fileID, len(voiceData))

	// 6. –ü—ã—Ç–∞–µ–º—Å—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä–æ–≤–∞—Ç—å –∞—É–¥–∏–æ
	mimeType := message.Voice.MimeType // –ò—Å–ø–æ–ª—å–∑—É–µ–º MIME-—Ç–∏–ø –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
	if mimeType == "" {
		mimeType = "audio/ogg" // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ MIME-—Ç–∏–ø –Ω–µ —É–∫–∞–∑–∞–Ω
		log.Printf("Chat %d: MIME-—Ç–∏–ø –Ω–µ —É–∫–∞–∑–∞–Ω –¥–ª—è —Ñ–∞–π–ª–∞ %s, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è '%s'", chatID, fileID, mimeType)
	}

	log.Printf("Chat %d: –ó–∞–ø—É—Å–∫ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏ –¥–ª—è —Ñ–∞–π–ª–∞ %s (MIME: %s)...", chatID, fileID, mimeType)
	// –ò—Å–ø–æ–ª—å–∑—É–µ–º –ö–õ–ò–ï–ù–¢ –î–õ–Ø –≠–ú–ë–ï–î–î–ò–ù–ì–û–í (Gemini) –¥–ª—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏!
	transcribedText, err := b.embeddingClient.TranscribeAudio(voiceData, mimeType)
	if err != nil {
		// –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏, —É–∫–∞–∑—ã–≤–∞—è, —á—Ç–æ –æ–Ω–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ —á–µ—Ä–µ–∑ embeddingClient
		log.Printf("Chat %d: –û—à–∏–±–∫–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏ –∞—É–¥–∏–æ –∏–∑ —Ñ–∞–π–ª–∞ %s —á–µ—Ä–µ–∑ embeddingClient (Gemini): %v", chatID, fileID, err)
		errMsg := fmt.Sprintf("‚ùå –û—à–∏–±–∫–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏ (Gemini): %v", err)
		log.Printf("[ERROR] %s", errMsg)
		b.sendReply(message.Chat.ID, errMsg)
		return fmt.Errorf("–æ—à–∏–±–∫–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ (Gemini): %w", err)
	}

	if transcribedText == "" {
		log.Printf("[WARN][VoiceHandler] Chat %d: –ü–æ–ª—É—á–µ–Ω–∞ –ø—É—Å—Ç–∞—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è %d. (File: %s)", chatID, messageID, fileID)
		// –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
		return nil
	}

	log.Printf("[INFO][VoiceHandler] Chat %d: Voice message %d transcribed: \"%s\"", chatID, messageID, transcribedText)

	// 7. –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –ø–æ–º–æ—â—å—é LLM (—Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞–∫–æ–≤ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è, –∞–±–∑–∞—Ü—ã)
	formattedText := transcribedText // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–∞–∫ fallback
	if b.config.VoiceFormatPrompt != "" {
		log.Printf("[DEBUG][VoiceHandler] Chat %d: Formatting transcribed text using LLM (%s)...", chatID, b.config.LLMProvider)
		// –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π b.llm –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
		formatted, errFormat := b.llm.GenerateArbitraryResponse(b.config.VoiceFormatPrompt, transcribedText)
		if errFormat != nil {
			log.Printf("[WARN][VoiceHandler] Chat %d: –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ LLM (%s): %v. –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç.", chatID, b.config.LLMProvider, errFormat)
			// –û—à–∏–±–∫—É —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ —Å—á–∏—Ç–∞–µ–º –∫—Ä–∏—Ç–∏—á–Ω–æ–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
		} else if formatted != "" {
			formattedText = formatted // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
			log.Printf("[INFO][VoiceHandler] Chat %d: Text formatted by LLM: \"%s\"", chatID, formattedText)
		} else {
			log.Printf("[WARN][VoiceHandler] Chat %d: LLM (%s) –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç.", chatID, b.config.LLMProvider)
		}
	} else {
		log.Printf("[DEBUG][VoiceHandler] Chat %d: VoiceFormatPrompt –ø—É—Å—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ LLM.", chatID)
	}

	// 8. –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç

	// --- –ü–æ–ª—É—á–∞–µ–º –∞–ª–∏–∞—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
	userAlias := "–ö—Ç–æ-—Ç–æ" // –î–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
	if message.From != nil {
		// –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
		userProfile, errProfile := b.storage.GetUserProfile(chatID, message.From.ID)
		if errProfile != nil {
			log.Printf("[WARN][VoiceHandler] Chat %d: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è UserID %d: %v. –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è.", chatID, message.From.ID, errProfile)
		} else if userProfile != nil && userProfile.Alias != "" {
			userAlias = userProfile.Alias
		} else {
			// –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ—Ç –∏–ª–∏ –∞–ª–∏–∞—Å –ø—É—Å—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º FirstName –∏–ª–∏ UserName
			if message.From.FirstName != "" {
				userAlias = message.From.FirstName
			} else if message.From.UserName != "" {
				userAlias = message.From.UserName
			}
		}
	}
	// --- –ö–æ–Ω–µ—Ü –ø–æ–ª—É—á–µ–Ω–∏—è –∞–ª–∏–∞—Å–∞ ---

	// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∞–ª–∏–∞—Å–æ–º –∏ –∫—É—Ä—Å–∏–≤–æ–º
	finalText := fmt.Sprintf("üó£Ô∏è (%s) –±–∞–∑–∞—Ä–∏—Ç:\n_%s_", userAlias, formattedText)

	// 9. –û–¢–ü–†–ê–í–õ–Ø–ï–ú –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
	// –ò—Å–ø–æ–ª—å–∑—É–µ–º sendReplyMarkdown –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫—É—Ä—Å–∏–≤–∞
	b.sendReplyMarkdown(chatID, finalText)
	log.Printf("[INFO][VoiceHandler] Chat %d: Sent formatted transcription for message %d.", chatID, messageID)

	// 10. –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Å —Ñ–ª–∞–≥–æ–º IsVoice) –≤ –ë–î (—ç—Ç–æ –¥–µ–ª–∞–µ—Ç—Å—è –≤ handleMessage)
	// –í—ã–∑–æ–≤ AddMessage –∑–¥–µ—Å—å –£–î–ê–õ–ï–ù.

	// 11. –í–æ–∑–≤—Ä–∞—â–∞–µ–º nil, —Ç–∞–∫ –∫–∞–∫ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
	return nil
}
